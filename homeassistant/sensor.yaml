  - platform: template
    sensors:
      water_meter_counter:
        friendly_name: Watermeter counter
        unit_of_measurement: m3
        value_template: |
          {% set water = ((states('sensor.water_meter_total_consumption')|float + 969.334)) %}
          {% if water <= 999999 %}
            {{ ((states('sensor.water_meter_total_consumption')|float + 969.334))|round(3) }}
          {% else %}
            {{ (states('sensor.water_meter_total_consumption')|float)|round(3) }}
          {% endif %}
sensor:

  - platform: template
    sensors:
      water_cost_daily:
        friendly_name: Water Cost Daily
        unit_of_measurement: '€'
        value_template: "{{ (states('sensor.daily_water_m3') | float * 1.08346) | round(2) + 0.12 | round(2)}}"
        
      water_cost_daily_eur:
        friendly_name: Water Cost Daily
#        unit_of_measurement: '€'
        value_template: "€{{ (states('sensor.daily_water_m3') | float * 1.08346) | round(2) + 0.12 | round(2)}}"
        
        
      water_cost_monthly:
        friendly_name: Water Cost Monthly
        unit_of_measurement: '€'
        value_template: "{{ (states('sensor.monthly_water_m3') | float * 1.08346) | round(2) + 3.50 | round(2)}}"
      water_cost_yearly:
        friendly_name: Water Cost Yearly
        unit_of_measurement: '€'
        value_template: "{{ (states('sensor.yearly_water_m3') | float * 1.08346) | round(2) + 42.12 | round(2)}}"


  - platform: mqtt
    name: "Power Consumption Watt"
    state_topic: "dsmr/reading/electricity_currently_delivered"
    unit_of_measurement: "W"
    value_template: "{{(states('sensor.dsmr_reading_electricity_currently_delivered') | float * 1000) | round(0)}}"
    
   
  - platform: template
    sensors:


      gemetenwatt:
        value_template: "{{states('sensor.woonkamertotaalwatt') | float | round(0) + states('sensor.keukentotaalwatt') | float | round(0) + states('sensor.haltotaalwatt') | float | round(0) + states('sensor.reserve2_watts') | float | round(0) + states('sensor.mm_watts') | float | round(0) + states('sensor.kinderen_watts') | float | round(0) }}"
        unit_of_measurement: 'W'   
        
      ontbrekendewatt:
        value_template: "{{states('sensor.power_consumption_watt') | float | round(0) - states('sensor.gemetenwatt') | float | round(0) }}"
        unit_of_measurement: 'W'    
       
        
      stroomverbruikvandaag:
        value_template: "{{(states('sensor.dsmr_day_consumption_electricity_merged') | float) | round(1)}}"
        unit_of_measurement: 'kWh'        
        
        
      stroomverbruiktotaalvandaag:
        value_template: "{{ '%.1f'|format((states('sensor.stroomverbruikvandaag') | float) + (states('sensor.growatt_generated_energy_today') | float) - (states('sensor.dsmr_day_consumption_electricity_returned_merged') | float))}}"
        unit_of_measurement: 'kWh'               

      gasverbruikvandaag:
        value_template: "{{(states('sensor.dsmr_day_consumption_gas') | float) | round(1)}}"
        unit_of_measurement: 'm³'        


      gridpowerconsumption:
       value_template: "{{(states('sensor.dsmr_reading_electricity_currently_delivered') | float * 1000) | round(0)}}"             
       unit_of_measurement: "W"         
       
       
      gridpowerdeliver:
       value_template: "{{(states('sensor.dsmr_reading_electricity_currently_returned') | float * 1000) | round(0)}}"             
       unit_of_measurement: "W"                

      gridpowernetto:
       value_template: "{{ '%.1f'|format((states('sensor.dsmr_day_consumption_electricity_merged') | float) - (states('sensor.dsmr_day_consumption_electricity_returned_merged') | float))  }}"
       unit_of_measurement: "kWh"  

      gas_water_licht_total_cost:
        value_template: "{{((states('sensor.dsmr_day_consumption_total_cost') | float) + (states('sensor.water_cost_daily') | float))}}"
        unit_of_measurement: "€"

      zonnepanelen_oplever_euro:
        value_template: "€{{(states('sensor.growatt_total_total_money_today'))}}"        
        
      dsmr_jaar_euro:
        value_template: "€{{(states('sensor.dsmr_current_year_total_cost'))}}"            
        
      dsmr_maand_euro:
        value_template: "€{{(states('sensor.dsmr_current_month_total_cost'))}}"  

      dsmr_dag_euro:
        value_template: "€{{(states('sensor.dsmr_day_consumption_total_cost'))}}"          
    

